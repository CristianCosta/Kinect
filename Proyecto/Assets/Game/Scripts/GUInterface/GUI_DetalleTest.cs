//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace AssemblyCSharp
{
		public class GUI_DetalleTest : MonoBehaviour
		{


		private bool openWindow = false;
		private float maxWidth = 350;
		private float maxHeight = 450;
		private float x = 15;
		private float y = 15;
		private Rect windowRect;
		private string longString = "This is a long-ish string";
		private string[] testNameStrings;
		private Vector2 gameScrollPositionTest = new Vector2();
		private int roomSelection = -1;
		private MonoBehaviour ant;
		private Test test ;
		
		public void setAnterior(MonoBehaviour g)
		{
			ant = g;		
		}

		
		public Test getTest(){
			return test;
		}
		
		// Update is called once per frame
		void Update () {
			
		}
		
		public void Mostrar(){
			openWindow = true;
		}
		
		void OnMouseUp(){
			if(GUIUtility.hotControl==0)
			Mostrar();
		}
		
		
		
		public void setTest(Test t){
			test = t;
		}
		
		void OnGUI(){
			GUISkin oldSkin = GUI.skin;
			GUI.skin = Skin.Instance.skin;
			if ((openWindow)){
				windowRect = new Rect(x,y,maxWidth,maxHeight);
				windowRect = GUI.Window(0,windowRect,doTestDetailWindow,"Detalle Test");
			}
			GUI.skin = oldSkin;
		}
		
		
		void doTestDetailWindow(int windowID){
			int heightActual = 30;
			GUIComponents.labelDetail(new Rect(20,heightActual,310,20),"ID Test: ",test.getIdTest().ToString());
			GUI.contentColor = Color.yellow;
			heightActual = heightActual + 25;
			GUIComponents.labelDetail(new Rect(20,heightActual,310,20),"Titulo: ",test.getClase()+"."+test.getMetodo());
			heightActual = heightActual + 25;
			GUI.contentColor = Color.yellow;
			GUIComponents.labelDetail(new Rect(20,heightActual,310,20),"Penteneciente al criterio: ",test.getIdCriterio().ToString());
			heightActual = heightActual + 25;
			GUI.contentColor = Color.yellow;
			GUIComponents.labelDetail(new Rect(20,heightActual,310,20),"Estado: ",test.getEstado());

			heightActual = heightActual + 25;
			GUI.contentColor = Color.yellow;
			GUI.Label(new Rect(20,heightActual,310,20),"Descripcion:");
			int offset = 18*((int)(test.getDescripcion().Length/50)+1);
			
			GUI.contentColor = Color.white;
			heightActual = heightActual + 20;
			GUI.Label(new Rect(40,heightActual,290,offset+10), test.getDescripcion());
			heightActual = heightActual + offset;
			GUI.contentColor = Color.yellow;

			
			GUI.contentColor = Color.white;
			if (GUI.Button(new Rect(maxWidth / 2 - 70 ,maxHeight - 50, 140, 40),"Cerrar")){
				openWindow = false;
				ant.SendMessage("Mostrar");
			}
		}
		
	}
}

