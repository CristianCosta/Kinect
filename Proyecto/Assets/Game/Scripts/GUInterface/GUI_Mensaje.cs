//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace AssemblyCSharp
{
	public class GUI_Mensaje : MonoBehaviour
	{

		public bool openWindow;
		private float maxWidth = 350;
		private float maxHeight = 150;
		private Rect windowRect;
		private int roomSelection = -1;
		private string mensaje = "";
		private string titulo = "";
		private MonoBehaviour ant;

		void Start () {
			openWindow = true;
		}
		
		void Update () {
		}
		
		
		public void Mostrar(){
			openWindow = true;
		}

		public void setMensaje(string mensaje){
			this.mensaje = mensaje;
		}

		public void setAnterior(MonoBehaviour ant)
		{
			this.ant=ant;		
		}


		public void setTitulo(string titulo){
			this.titulo = titulo;
		}

		void OnGUI(){
			GUISkin oldSkin = GUI.skin;
			GUI.skin = Skin.Instance.skin;
			if (openWindow){
				windowRect = new Rect(Screen.width/2-maxWidth/2,Screen.height/2-maxHeight/2,maxWidth,maxHeight);
				GUI.contentColor = Color.white;
				windowRect = GUI.Window(0,windowRect,doMensajeWindow,titulo);
			}       
			GUI.skin = oldSkin;
		}

		void doMensajeWindow(int windowID){

			GUI.contentColor = Color.white;
			GUI.skin.label.wordWrap = true;
		
			GUI.Label(new Rect (maxWidth/2-(maxWidth-50)/2, 50, maxWidth-50 , 60), mensaje);
			GUI.contentColor = Color.white;
			if (GUI.Button(new Rect(maxWidth/2-50,maxHeight-35,100,20),"Cerrar")){
				openWindow = false;
			//	this.ant.SendMessage("Mostrar");				

			}
		
		}
	}
}

