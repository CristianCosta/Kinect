//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;


namespace AssemblyCSharp
{
	public class GUI_ResultadoTest : MonoBehaviour
	{

		private bool openWindow = false;
		private float maxWidth = 850;
		private float maxHeight = 500;
		private Rect windowRect;
		private GUI_DetalleItemTest ant; 
		private List<EjecucionTest> resultadoEjecucion = new List<EjecucionTest>();
		private Vector2 gameScrollPositionTests= new Vector2();

		public GUI_ResultadoTest ()
		{
		}

		public void Start () {
		}
		
		public void Mostrar(){
			openWindow = true;
		}

		public void setAnterior(GUI_DetalleItemTest anterior){
			ant = anterior;
		}

		void OnGUI(){
			GUISkin oldSkin = GUI.skin;
			GUI.skin = Skin.Instance.skin;
			if ((openWindow)){
				windowRect = new Rect(15,15,maxWidth,maxHeight);
				windowRect = GUI.Window(0,windowRect,doTaskDetailWindow,"Resultado Test");
			}
			GUI.skin = oldSkin;
		}

		void setEjecucionTest(List<EjecucionTest> resultado)
		{
			resultadoEjecucion = resultado;	
		}

		void doTaskDetailWindow(int windowID){

			int heightActual = 30;
			int widthNeeded = 1400;
			gameScrollPositionTests = GUI.BeginScrollView(new Rect (30, heightActual, maxWidth -50 , maxHeight - heightActual - 30), gameScrollPositionTests, new Rect (0, 0, widthNeeded -30 , resultadoEjecucion.Count*5*19));
			int height = 0;
			GUI.color = Color.yellow;
			GUI.Label (new Rect (10, height, 250, 30),  "Nombre");
			GUI.Label (new Rect (280, height, 80, 30), "Resultado");
			GUI.Label (new Rect (370, height, 100, 30), "Fecha y Hora");
			GUI.Label (new Rect (480, height, 70, 30), "Duracion");
			GUI.Label (new Rect (560, height, 70, 30), "Entorno");
			GUI.Label (new Rect (640, height, 370, 30), "Mensaje ");
			GUI.Label (new Rect (1010, height, 380, 30), "Stack-Trace");
			height += 30;
			GUI.color = Color.white;
			//gameScrollPositionTests = GUI.BeginScrollView(new Rect (0, heightActual, maxWidth -50 , maxHeight - heightActual - 30), gameScrollPositionTests, new Rect (0, 0, maxWidth -100 , resultadoEjecucion.Count*5*19));
			//int height = 0;
			foreach (EjecucionTest e in resultadoEjecucion) {
				int  t = 0;
				if ( e.getMensaje().Split('\n').Length < e.getStacktrace().Split('\n').Length)
						t = e.getMensaje().Split('\n').Length;
				else
					if(e.getMensaje().Split('\n').Length != 1 && e.getStacktrace().Split('\n').Length != 1)
						t = e.getMensaje().Split('\n').Length;
					else
						t = 4;
				GUI.Label (new Rect (10, height, 250, t*17),  e.getName());
				GUI.Label (new Rect (280, height, 70, t*17), e.getEstado());
				GUI.Label (new Rect (370, height, 100, t*17), e.getFechaHora().ToString());
				GUI.Label (new Rect (480, height, 70, t*17), e.getTime());
				GUI.Label (new Rect (560, height, 70, t*17), e.getEntorno());
				GUI.Label (new Rect (640, height, 370, t*17), e.getMensaje());
				GUI.Label (new Rect (1010, height, 380, t*17), e.getStacktrace());
				height += t*19;
			}
			GUI.EndScrollView ();

			if (GUI.Button (new Rect (300 ,maxHeight-30, maxWidth-600 ,20), "Cerrar")) {
				openWindow = false;
				this.ant.Mostrar();
				Destroy(this);
			}
		}
	}
}

